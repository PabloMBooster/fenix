rep(1/groups, groups)
groups = 4
rep(1/groups, groups)
groups = 3
rep(1/groups, groups)
round(rep(1/groups, groups),2)
0.33+0.33+0.33
sigma  = seq(2, 2+groups-1, by = 1)
pi     = rep(1/groups, groups)
dfPars = data.frame(pi = pi, mu = mu, sigma = sigma)
dfPars
x
separar_modas <- function(x, length_class = seq(5, 20, by = 0.5), groups, mu = mu, maxit = 5000, plot = T){
list.of.packages <- c("mixdist")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(mixdist)
x[is.na(x)] = 0
sigma  = seq(2, 2+groups-1, by = 1)
pi     = rep(1/groups, groups)
dfPars = data.frame(pi = pi, mu = mu, sigma = sigma)
df     = data.frame(legnth = length_class), freq = x)
outL = tryCatch({
mix(mixdat = df, mixpar = dfPars, dist = "norm", print.level = 1)
}, error=function(e) {
message("Not Converge")
outL <- NULL
return(outL)
})
if(!is.null(outL)){
res_modas2 = fitted(fit1)
res_modas2 = res_modas2$joint
population = sum(res_modas2)
tableBhatt = data.frame(Group = seq_along(outL$parameters$mu), Mean = outL$parameters$mu, Sigma = outL$parameters$sigma, Population = population)
if(isTRUE(plot)){
plot(outL)
}
cohortes <- data.frame(res_modas2)
names(cohortes) <- paste0("cohor",1:ncol(cohortes))
out = list(tableBhatt = tableBhatt, cohortes, outL = outL)
}else{
out = NULL
}
return(out)
}
#
# fit1 = mix(mixdat = df, mixpar = dfPars, dist = "norm", print.level = 1)
# res_modas2 = fitted(fit1)
# res_modas2 = res_modas2$joint
# plot(apply(res_modas2,1,sum), type = "l", lwd = 2, col = 2)
# lines(res_modas2[,1], col = 3, lwd = 2)
# lines(res_modas2[,2], col = 3, lwd = 2)
# lines(apply(res_modas2,1,sum))
# lines(sample_frequency, col = 4)
x <-  c(0,0,0,0,0,0,0,0,0,2,7,14,22,15,13,12,17,22,35,28,7,4,1,0,0,0,0,0,0,0,0)
separar_modas <- function(x, length_class = seq(5, 20, by = 0.5), groups, mu = mu, plot = FALSE){
list.of.packages <- c("mixdist")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(mixdist)
x[is.na(x)] = 0
sigma  = seq(2, 2+groups-1, by = 1)
pi     = rep(1/groups, groups)
dfPars = data.frame(pi = pi, mu = mu, sigma = sigma)
df     = data.frame(legnth = length_class), freq = x)
outL = tryCatch({
mix(mixdat = df, mixpar = dfPars, dist = "norm", print.level = 1)
}, error=function(e){
message("Not Converge")
outL <- NULL
return(outL)
})
if(!is.null(outL)){
res_modas2 = fitted(fit1)
res_modas2 = res_modas2$joint
population = sum(res_modas2)
tableBhatt = data.frame(Group = seq_along(outL$parameters$mu), Mean = outL$parameters$mu, Sigma = outL$parameters$sigma, Population = population)
if(isTRUE(plot)){
plot(outL)
}
cohortes <- data.frame(res_modas2)
names(cohortes) <- paste0("cohor",1:ncol(cohortes))
out = list(tableBhatt = tableBhatt, cohortes, outL = outL)
}else{
out = NULL
}
return(out)
}
mu = as.numeric()
mu
mixpar
data(pikepar)
pikepar
separar_modas <- function(x, length_class = seq(5, 20, by = 0.5), mixpar, mu = as.numeric(), plot = FALSE){
list.of.packages <- c("mixdist")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(mixdist)
x[is.na(x)] = 0
mixdat     = data.frame(legnth = length_class, freq = x)
outL = tryCatch({
mix(mixdat = df, mixpar = mixpar, dist = "norm", print.level = 1)
}, error=function(e){
message("Not Converge")
outL <- NULL
return(outL)
})
if(!is.null(outL)){
res_modas2 = fitted(fit1)
res_modas2 = res_modas2$joint
population = sum(res_modas2)
tableBhatt = data.frame(Group = seq_along(outL$parameters$mu), Mean = outL$parameters$mu, Sigma = outL$parameters$sigma, Population = population)
if(isTRUE(plot)){
plot(outL)
}
cohortes <- data.frame(res_modas2)
names(cohortes) <- paste0("cohor",1:ncol(cohortes))
out = list(tableBhatt = tableBhatt, cohortes, outL = outL)
}else{
out = NULL
}
return(out)
}
Bhattacharya2 <- function(x, length_class = seq(5, 20, by = 0.5), mixpar, plot = FALSE){
list.of.packages <- c("mixdist")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(mixdist)
x[is.na(x)] = 0
mixdat     = data.frame(legnth = length_class, freq = x)
outL = tryCatch({
mix(mixdat = df, mixpar = mixpar, dist = "norm", print.level = 1)
}, error=function(e){
message("Not Converge")
outL <- NULL
return(outL)
})
if(!is.null(outL)){
res_modas2 = fitted(fit1)
res_modas2 = res_modas2$joint
population = sum(res_modas2)
tableBhatt = data.frame(Group = seq_along(outL$parameters$mu), Mean = outL$parameters$mu, Sigma = outL$parameters$sigma, Population = population)
if(isTRUE(plot)){
plot(outL)
}
cohortes <- data.frame(res_modas2)
names(cohortes) <- paste0("cohor",1:ncol(cohortes))
out = list(tableBhatt = tableBhatt, cohortes, outL = outL)
}else{
out = NULL
}
return(out)
}
library(fenix)
library(fenix)
library(fenix)
require(fenix)
tmpAnchNC <- read.csv("temporadas.csv")
tmpAnchNC
save(tmpAnchNC, file = "data/tmpAnchNC.RData")
tmpAnchNC
library(fenix)
library(fenix)
library(fenix)
require(fenix)
mapa_peru()
library(fenix)
library(fenix)
library(fenix)
library(fenix)
read.csv("temporadas.csv")
data <- read.csv("temporadas.csv")
data
require(fenix)
tmpAnchNC
tmpAnchNC <- read.csv("temporadas.csv")
save(tmpAnchNC, file = "data/tmpAnchNC.RData")
tmpAnchNC
library(fenix)
tmpAnchNC
require(fenix)
tmpAnchNC
getwd()
tmpAnchNC <- read.csv("temporadas.csv")
tmpAnchNC
tmpAnchNC <- read.csv("temporadas.csv")
tmpAnchNC
getwd()
save(tmpAnchNC, file = "C:/pablo/D/github/fenix/data/tmpAnchNC.RData")
library(fenix)
tmpAnchNC
require(fenix)
tmpAnchNC
tmpAnchNC <- read.csv("temporadas.csv")
tmpAnchNC
getwd()
save(tmpAnchNC, file = "C:/pablo/D/github/fenix/data/tmpAnchNC.RData")
library(fenix)
tmpAnchNC
library(fenix)
mapa_peru()
require(fenix)
mapa_peru()
mtext(side = 2, text = "Latitude")
mtext(side = 2, text = "Latitude", line = 2)
mapa_peru(area_iso = T, name_area_iso = c(12180, 13180))
head(AIPData_old)
library(fenix)
library(fenix)
library(fenix)
## indices_reproductivos
require(fenix)
dataRepro = read.csv("datos/dataRepro.csv")
dataRepro$fecha <- as.Date(dataRepro$fecha, format = "%d/%m/%Y")
dataRepro <- dataRepro[-c(1:12),]
tiempo = dataRepro$fecha
indice = dataRepro$IGS
patron = dataRepro$IGS_PATRON
sd_patron = dataRepro$IGS_SD
valor_crucero = NULL
axis_x = FALSE
nombre_crucero = NULL
nombre_patron = "Patron"
nombre_indice_legenda = "IGS"
nombre_indice = "IGS"
require(plotrix)
x <- 1:length(indice)
y <- patron
uwi <- sd_patron
lwi <- sd_patron
valor_min = 0
valor_max = round(max(y)+max(uwi))+dl
if(max(y) < 1){
valor_max = 0.9
valor_min = 0.5
}
plotCI(x, y,uwi,lwi, lwd = 1, col = "red", scol = "gray30",slty = 1, ui = 2,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
if(is.null(nombre_indice)){
nombre_indice = "nombre indice"
}
x <- 1:length(indice)
y <- patron
uwi <- sd_patron
lwi <- sd_patron
valor_min = 0
valor_max = round(max(y)+max(uwi))+dl
if(max(y) < 1){
valor_max = 0.9
valor_min = 0.5
}
if(is.null(nombre_indice)){
nombre_indice = "nombre indice"
}
plotCI(x, y,uwi,lwi, lwd = 1, col = "red", scol = "gray30",slty = 1, ui = 2,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
max(y)
valor_min = 0
valor_max = round(max(y)+max(uwi))+dl
dl = 3
plotCI(x, y,uwi,lwi, lwd = 1, col = "red", scol = "gray30",slty = 1, ui = 2,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
valor_min = 0
valor_max = round(max(y)+max(uwi))+dl
plotCI(x, y,uwi,lwi, lwd = 1, col = "red", scol = "gray30",slty = 1, ui = 2,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
lines(x,y, col = 2,lwd = 2)
lines(x,indice,col = 4,lwd = 2)
x
y
lines(x,y, col = 2,lwd = 2)
lines(x,indice,col = 4,lwd = 2)
plotCI(x, y,uwi,lwi, lwd = 1, col = "red", scol = "gray30",slty = 1, ui = 2,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
lines(x,y, col = 2,lwd = 2)
lines(x,indice,col = 4,lwd = 2)
plotCI(x, y,uwi,lwi, lwd = 1, col = "red", scol = "gray30",slty = 1, ui = 2, col = col_bar,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
col_bar  = "white"
plotCI(x, y,uwi,lwi, lwd = 1, col = "red", scol = "gray30",slty = 1, ui = 2, col = col_bar,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
plotCI(x, y,uwi,lwi, lwd = 1, col = "red", scol = "gray30",slty = 1, ui = 2, col = col_bar,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
plotCI(x, y,uwi,lwi, lwd = 1, scol = "gray30",slty = 1, ui = 2, col = col_bar,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
plotCI(x, y,uwi,lwi, lwd = 1, slty = 1, ui = 2, scol = col_bar,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
plotCI(x, y,uwi,lwi, lwd = 1, slty = 1, ui = 2, scol = col_bar,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
lines(x,y, col = col_patron, lwd = 2)
col_patron = "white"
patron = TRUE
if(patron == FALSE){
col_bar  = "white"
col_patron = "white"
}else{
col_bar  = "gray30"
col_patron = "red"
}
plotCI(x, y,uwi,lwi, lwd = 1, slty = 1, ui = 2, scol = col_bar,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
lines(x,y, col = col_patron, lwd = 2)
lines(x,indice,col = 4,lwd = 2)
patron = FALSE
plotCI(x, y,uwi,lwi, lwd = 1, slty = 1, ui = 2, scol = col_bar,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
lines(x,y, col = col_patron, lwd = 2)
lines(x,indice,col = 4,lwd = 2)
if(patron == FALSE){
col_bar  = "white"
col_patron = "white"
}else{
col_bar  = "gray30"
col_patron = "red"
}
plotCI(x, y,uwi,lwi, lwd = 1, slty = 1, ui = 2, scol = col_bar,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
lines(x,y, col = col_patron, lwd = 2)
lines(x,indice,col = 4,lwd = 2)
## indices_reproductivos
require(fenix)
dataRepro = read.csv("datos/dataRepro.csv")
dataRepro$fecha <- as.Date(dataRepro$fecha, format = "%d/%m/%Y")
dataRepro <- dataRepro[-c(1:12),]
dataRepro
dataRepro$fecha
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = FALSE, plot_patron = T)
library(fenix)
plot_repro
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = FALSE)
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = FALSE, plot_patron = F)
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = FALSE)
layout(matrix(c(1,2,3), 3, 1, byrow = TRUE), heights = c(0.85,0.85,1))
par(mar = c(0.5,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = FALSE)
legend("topleft", legend = "a)",bty = "n")
par(mar = c(0.5,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$FD, patron = dataRepro$FD_PATRON, sd_patron = dataRepro$FD_SD, valor_crucero = NULL,
nombre_indice = "FD", nombre_indice_legenda = "FD", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = FALSE)
legend("topleft", legend = "b)",bty = "n")
par(mar = c(4,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IA, patron = dataRepro$IA_PATRON, sd_patron = dataRepro$IA_SD, valor_crucero = NULL,
nombre_indice = "IA", nombre_indice_legenda = "IA", nombre_patron = "Patron", nombre_crucero = NULL)
legend("topleft", legend = "c)",bty = "n")
abline(v = which(substring(tiempo,6,7) %in% "01"), col = 1, lty = 2)
layout(matrix(c(1,2,3), 3, 1, byrow = TRUE), heights = c(0.85,0.85,1))
par(mar = c(0.5,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$FC, patron = dataRepro$FC_PATRON, sd_patron = dataRepro$FC_SD, valor_crucero = NULL,
nombre_indice = "FC", nombre_indice_legenda = "FC", nombre_patron = "Patron", nombre_crucero = NULL,  axis_x = FALSE)
legend("topleft", legend = "a)",bty = "n")
par(mar = c(0.5,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$FC, patron = dataRepro$FC_PATRON, sd_patron = dataRepro$FC_SD, valor_crucero = NULL,
nombre_indice = "FC", nombre_indice_legenda = "FC", nombre_patron = "Patron", nombre_crucero = NULL,  axis_x = FALSE)
legend("topleft", legend = "a)",bty = "n")
par(mar = c(4,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$CG, patron = dataRepro$CG_PATRON, sd_patron = dataRepro$CG_SD, valor_crucero = NULL,
nombre_indice = "CG", nombre_indice_legenda = "CG", nombre_patron = "Patron", nombre_crucero = NULL)
legend("topleft", legend = "b)",bty = "n")
layout(matrix(c(1,2,3), 3, 1, byrow = TRUE), heights = c(0.85,0.85,1))
par(mar = c(0.5,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$FC, patron = dataRepro$FC_PATRON, sd_patron = dataRepro$FC_SD, valor_crucero = NULL,
nombre_indice = "FC", nombre_indice_legenda = "FC", nombre_patron = "Patron", nombre_crucero = NULL,  axis_x = FALSE)
legend("topleft", legend = "a)",bty = "n")
par(mar = c(0.5,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$FC, patron = dataRepro$FC_PATRON, sd_patron = dataRepro$FC_SD, valor_crucero = NULL,
nombre_indice = "FC", nombre_indice_legenda = "FC", nombre_patron = "Patron", nombre_crucero = NULL,  axis_x = FALSE)
legend("topleft", legend = "a)",bty = "n")
par(mar = c(4,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$CG, patron = dataRepro$CG_PATRON, sd_patron = dataRepro$CG_SD, valor_crucero = NULL,
nombre_indice = "CG", nombre_indice_legenda = "CG", nombre_patron = "Patron", nombre_crucero = NULL)
legend("topleft", legend = "b)",bty = "n")
layout(matrix(c(1,2,3), 3, 1, byrow = TRUE), heights = c(0.85,0.85,1))
par(mar = c(0.5,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = FALSE)
legend("topleft", legend = "a)",bty = "n")
par(mar = c(0.5,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$FD, patron = dataRepro$FD_PATRON, sd_patron = dataRepro$FD_SD, valor_crucero = NULL,
nombre_indice = "FD", nombre_indice_legenda = "FD", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = FALSE)
legend("topleft", legend = "b)",bty = "n")
par(mar = c(4,4,0,0))
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IA, patron = dataRepro$IA_PATRON, sd_patron = dataRepro$IA_SD, valor_crucero = NULL,
nombre_indice = "IA", nombre_indice_legenda = "IA", nombre_patron = "Patron", nombre_crucero = NULL)
legend("topleft", legend = "c)",bty = "n")
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = FALSE)
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = FALSE, plot_patron = F)
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = T, plot_patron = F)
plot_repro <- function(tiempo, indice, patron, sd_patron, valor_crucero = NULL, fecha = as.Date(time, format = "%d/%m/%Y"),
nombre_indice = NULL, nombre_indice_legenda = NULL,  nombre_patron = NULL, plot_patron = TRUE,
nombre_crucero = NULL, axis_x = TRUE, dl = 3){
require(plotrix)
x <- 1:length(indice)
y <- patron
uwi <- sd_patron
lwi <- sd_patron
valor_min = 0
valor_max = round(max(y)+max(uwi))+dl
if(max(y) < 1){
valor_max = 0.9
valor_min = 0.5
}
if(is.null(nombre_indice)){
nombre_indice = "nombre indice"
}
if(plot_patron == FALSE){
col_bar  = "white"
col_patron = "white"
}else{
col_bar  = "gray30"
col_patron = "red"
}
plotCI(x, y,uwi,lwi, lwd = 1, slty = 1, ui = 2, scol = col_bar,
xlab="", pt.bg=par("bg"), pch = ".",
ylab=nombre_indice, ylim = c(valor_min, valor_max),
axes=F)
lines(x,y, col = col_patron, lwd = 2)
lines(x,indice,col = 4,lwd = 2)
if(!is.null(valor_crucero)){
points(length(tiempo),valor_crucero, col = 1,pch = 16)
}
if(isTRUE(axis_x)){
axis(1,at=1:length(tiempo),labels=substring(tiempo, 1,7),las=2,cex.axis=1,tcl = -0.2,hadj = 0.8)
axis(1,at=1:length(time),labels=FALSE,tcl = -0.5)
}else{
axis(1,at=1:length(tiempo),labels=FALSE,las=2,cex.axis=1,tcl = -0.2,hadj = 0.8)
axis(1,at=1:length(time),labels=FALSE,tcl = -0.5)
}
abline(v = which(substring(tiempo,6,7) %in% "01"), col = 1, lty = 2)
axis(2)
box()
if(is.null(nombre_indice_legenda)){
nombre_indice_legenda <- nombre_indice
}
if(is.null(nombre_patron)){
nombre_patron <- "Patron"
}
if(plot_patron == TRUE){
if(is.null(nombre_crucero)){
legend("toprigh",c(nombre_patron, nombre_indice_legenda), lty = c(1,1), lwd = c(2,2),col = c(2,4),bty = "n")
}else{
legend("toprigh",c(nombre_patron, nombre_indice_legenda, nombre_crucero), lty = c(1,1,0), lwd = c(2,2,NA),pch = c(NA,NA,16), col = c(2,4,1),bty = "n")
}
}
if(plot_patron == FALSE){
if(is.null(nombre_crucero)){
legend("toprigh", nombre_indice_legenda, lty = 1, lwd = 2, col = 4, bty = "n")
}else{
legend("toprigh",c(nombre_indice_legenda, nombre_crucero), lty = c(1,0), lwd = c(2,NA), pch = c(NA,16), col = c(4,1), bty = "n")
}
}
}
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = FALSE)
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = T)
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = T, plot_patron = F)
dataRepro$fecha
dataRepro$fecha <- as.Date(dataRepro$fecha, format = "%d/%m/%Y")
dataRepro$fecha
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = NULL, axis_x = T, plot_patron = F)
library(fenix)
library(fenix)
library(fenix)
library(fenix)
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = 5,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = "Cr_1802_04")
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = 5,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", nombre_patron = "Patron", nombre_crucero = "Cr_1802_04", legend = F)
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = 5,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", plot_patron = F,nombre_patron = "Patron", nombre_crucero = "Cr_1802_04", legend = F)
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", plot_patron = F,nombre_patron = "Patron", nombre_crucero = NULL, legend = F)
plot_repro(tiempo = dataRepro$fecha, indice = dataRepro$IGS, patron = dataRepro$IGS_PATRON, sd_patron = dataRepro$IGS_SD, valor_crucero = NULL,
nombre_indice = "IGS", nombre_indice_legenda = "IGS", plot_patron = F,nombre_patron = "Patron", nombre_crucero = NULL, legend = T)
