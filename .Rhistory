DATE.INTERP=tempo)
})
matriz.int <- do.call(rbind.data.frame,interp)
matriz.int.i = x[1,]
matriz.int.i$lon2 = matriz.int.i$LONGITUDE_M
matriz.int.i$lat2 = matriz.int.i$LATITUDE_M
matriz.int.i$DATE.INTERP = t2[1]
matriz.int.i$ind.t = matriz.int$ind.t[1]
#matriz.int.i = matriz.int.i[,-which(names(matriz.int.i) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int.f = x[length(x[,1]),]
matriz.int.f$lon2 = matriz.int.f$LONGITUDE_M
matriz.int.f$lat2 = matriz.int.f$LATITUDE_M
matriz.int.f$DATE.INTERP = t2[length(t2)]
matriz.int.f$ind.t = matriz.int$ind.t[1]
#matriz.int.f = matriz.int.f[,-which(names(matriz.int.f) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int = rbind(matriz.int.i[,names(matriz.int)], matriz.int, matriz.int.f[,names(matriz.int)])
#  }
})
interpoL <- do.call(rbind.data.frame,interpL)
vms.interpol <- unprojet(interpoL)
write.csv(vms.interpol , file=paste0('sisesat_',year,'-',scale.temporal,"_min",'.csv'))
#save(vms.interpol,file=paste0('sisesat_',year,'.RData'))
return(vms.interpol)
}
out.r = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
library(lubridate)
out.r = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
area = "+init=epsg:4802"
proj4 = "+proj=longlat +ellps=intl +pm=bogota +no_defs"
out.p = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
plot(out.r$lon2, out.p$lon2)
plot(out.r$LONGITUDE, out.p$LONGITUDE)
head(out.p)
area = "+init=epsg:3035"
proj4 = "+proj=longlat  +ellps=WGS84 +datum=WGS84"
library(sp)
# para que sirve
projet <- function(data){
xy <- data[c("Lon","Lat")]
data[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
return(data)
}
####
unprojet <- function(data){
xy <- data[c("lon2","lat2")]
data[c("LONGITUDE","LATITUDE")] <- coordinates(spTransform(SpatialPointsDataFrame(xy,data,proj4string = CRS(area)),
CRS(proj4)))
return(data)
}
projet.data <- projet(data0)
data0$Cod.Viaje.VMS[1]
data0 = data0[data0$Cod.Viaje.VMS %in% "10061-1",]
area = "+init=epsg:3035"
proj4 = "+proj=longlat  +ellps=WGS84 +datum=WGS84"
library(sp)
projet <- function(data){
xy <- data[c("Lon","Lat")]
data[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
return(data)
}
####
unprojet <- function(data){
xy <- data[c("lon2","lat2")]
data[c("LONGITUDE","LATITUDE")] <- coordinates(spTransform(SpatialPointsDataFrame(xy,data,proj4string = CRS(area)),
CRS(proj4)))
return(data)
}
require(SISESATools)
projet.data <- projet(data0)
out.r = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
out.p = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
out.r$lon2
out.p$lon2
out.r$LONGITUDE
out.p$LONGITUDE
out.r$LONGITUDE
out.p$LONGITUDE
plot(out.r$LONGITUDE, out.p$LONGITUDE)
out.r$LONGITUDE
out.p$LONGITUDE
out.r$LATITUDE
out.p$LATITUDE
mapVMS(projet.data0$Lon, projet.data0$Lat, projet.data0$Vel.Cal)
mapVMS(data0$Lon, data0$Lat, projet.data0$Vel.Cal)
mapVMS(data0$Lon, data0$Lat, data0$Vel.Cal)
mapVMS(data0$Lon, data0$Lat, data0$Vel.Cal)
points(out.r$LONGITUDE, out.r$LATITUDE, pch = 16, cex = 0.5)
install.packages("proj4")
install.packages("proj4js")
area = "+init=epsg:4218"
proj4 = "+proj=longlat +ellps=intl +towgs84=307,304,-318,0,0,0,0 +no_defs"
out.p.0 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
area = "+init=epsg:4802"
proj4 = "+proj=longlat +ellps=intl +towgs84=307,304,-318,0,0,0,0 +pm=bogota +no_defs"
out.p.1 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
area = "+init=epsg:21898"
proj4 = "+proj=tmerc +lat_0=4.599047222222222 +lon_0=-71.08091666666667 +k=1 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs"
out.p.2 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
out.r$lon2
out.p$lon2
out.p.0$lon2
out.p.1$lon2
out.p$.2lon2
out.p.2$lon2
out.r$LONGITUDE
out.p$LONGITUDE
out.p.0$LONGITUDE
out.p.1$LONGITUDE
out.p.2$LONGITUDE
library(sp)
# para que sirve
projet <- function(data){
xy <- data[c("Lon","Lat")]
data[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
return(data)
}
####
unprojet <- function(data){
xy <- data[c("lon2","lat2")]
data[c("LONGITUDE","LATITUDE")] <- coordinates(spTransform(SpatialPointsDataFrame(xy,data,
proj4string = CRS(area)),
CRS(proj4)))
return(data)
}
out.p.0 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
out.p.1 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
out.p.2 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
out.p.0$LONGITUDE
out.p.1$LONGITUDE
out.p.2$LONGITUDE
out.r$LONGITUDE
out.p$LONGITUDE
area = "+init=epsg:4218"
proj4 = "+proj=longlat +ellps=intl +towgs84=307,304,-318,0,0,0,0 +no_defs"
library(sp)
# para que sirve
projet <- function(data){
xy <- data[c("Lon","Lat")]
data[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
return(data)
}
####
unprojet <- function(data){
xy <- data[c("lon2","lat2")]
data[c("LONGITUDE","LATITUDE")] <- coordinates(spTransform(SpatialPointsDataFrame(xy,data,
proj4string = CRS(area)),
CRS(proj4)))
return(data)
}
out.p.0 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
out.p.0$LONGITUDE
out.r$LONGITUDE
out.p$LONGITUDE
out.p.0$LONGITUDE
out.p.1$LONGITUDE
out.p.2$LONGITUDE
projet.data <- projet(data0)
out.p.0 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
out.p.0$LONGITUDE
area = "+init=epsg:4218"
proj4 = "+proj=longlat +ellps=intl +towgs84=307,304,-318,0,0,0,0 +no_defs"
projet.data <- projet(data0)
out.p.0 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
area = "+init=epsg:4802"
proj4 = "+proj=longlat +ellps=intl +towgs84=307,304,-318,0,0,0,0 +pm=bogota +no_defs"
projet.data <- projet(data0)
out.p.1 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
area = "+init=epsg:21898"
proj4 = "+proj=tmerc +lat_0=4.599047222222222 +lon_0=-71.08091666666667 +k=1 +x_0=1000000 +y_0=1000000 +ellps=intl +towgs84=307,304,-318,0,0,0,0 +units=m +no_defs"
projet.data <- projet(data0)
out.p.2 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
out.r$LONGITUDE
out.p$LONGITUDE
out.p.0$LONGITUDE
out.p.1$LONGITUDE
out.p.2$LONGITUDE
area = "+init=epsg:24891"
proj4 = "+proj=tmerc +lat_0=-6 +lon_0=-80.5 +k=0.99983008 +x_0=222000 +y_0=1426834.743 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs"
projet.data <- projet(data0)
out.p.3 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
area = "+init=epsg:24892"
proj4 = "+proj=tmerc +lat_0=-9.5 +lon_0=-76 +k=0.99932994 +x_0=720000 +y_0=1039979.159 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs"
out.p.4 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
projet.data <- projet(data0)
out.p.4 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
area = "+init=epsg:24893"
proj4 = "+proj=tmerc +lat_0=-9.5 +lon_0=-70.5 +k=0.99952992 +x_0=1324000 +y_0=1040084.558 +ellps=intl +towgs84=-288,175,-376,0,0,0,0 +units=m +no_defs"
projet.data <- projet(data0)
out.p.5 = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
out.p.3$LONGITUDE
out.p.4$LONGITUDE
out.p.5$LONGITUDE
out.r$LONGITUDE
out.p$LONGITUDE
out.p.0$LONGITUDE
out.p.1$LONGITUDE
out.p.2$LONGITUDE
out.p.3$LONGITUDE
out.p.4$LONGITUDE
out.p.5$LONGITUDE
out.p.5$LONGITUDE
out.r$LONGITUDE
out.p$LONGITUDE
out.p.0$LONGITUDE
out.p.1$LONGITUDE
out.p.2$LONGITUDE
out.p.3$LONGITUDE
out.p.4$LONGITUDE
out.p.5$LONGITUDE
out.r$LONGITUDE
out.p$LONGITUDE
out.p.0$LONGITUDE
out.p.1$LONGITUDE
out.p.2$LONGITUDE
require(path)
require(fenix)
tmp
require(vmsbase)
count.fields(|)
CountMap
vmsbase:::.CountMap
vmsbase:::upper.to.lower.tri.inds
Bathymetry
bathymetry
require(vmstools)
library(devtools)
install_github("nielshintzen/vmstools")
setwd("F:/github/fenix")
library(fenix)
library(fenix)
library(fenix)
estima.modas
library(fenix)
library(fenix)
library(fenix)
library(fenix)
estima.modas()
estima.modas
library(fenix)
library(fenix)
require(fenix)
temporada
tmpAnchNC
temporada
temporada <- read.csv("F:/Datos Bitacoras/tmpAnchNC.csv")
temporada
temporada <- read.csv("F:/Datos Bitacoras/tmpAnchNC.csv", sep = ";")
temporada
temporada
save(temporada, "temporada.RData")
save(temporada, file = "temporada.RData")
temporada
library(fenix)
temporada
library(fenix)
DateTemp
temporada
require(fenix)
fenix:::ReadPorcenta
temporada
as.Date(temporada$temp_1_i, format ="%d/%m/%Y")
as.Date(temporada$temp_1_f, format ="%d/%m/%Y")
as.Date(temporada$temp_2_i, format ="%d/%m/%Y")
as.Date(temporada$temp_2_f, format ="%d/%m/%Y")
DateTemp <- function(x, y.omit = c(2014,2016)){
require(fenix)
temporada$temp_1_i <- as.Date(temporada$temp_1_i, format ="%d/%m/%Y")
temporada$temp_1_f <- as.Date(temporada$temp_1_f, format ="%d/%m/%Y")
temporada$temp_2_i <- as.Date(temporada$temp_2_i, format ="%d/%m/%Y")
temporada$temp_2_f <- as.Date(temporada$temp_2_f, format ="%d/%m/%Y")
id.temp = rep(NA, length(x))
for(i in 1:length(temporada$Años)){
if(temporada$Años[i] %in% y.omit){
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
}else{
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
id.temp[x >= temporada$temp_2_i[i] & x <= temporada$temp_2_f[i]] =   paste(temporada$Años[i],".2", sep = "")
}
}
return(id.temp)
}
temporada
temporada
temporada
temporada
temporada$temp_1_i[i]
library(fenix)
#  tempNorteCentro --------------------------------------------------------
DateTemp <- function(x){
require(fenix)
temporada$temp_1_i <- as.Date(temporada$temp_1_i, format ="%d/%m/%Y")
temporada$temp_1_f <- as.Date(temporada$temp_1_f, format ="%d/%m/%Y")
temporada$temp_2_i <- as.Date(temporada$temp_2_i, format ="%d/%m/%Y")
temporada$temp_2_f <- as.Date(temporada$temp_2_f, format ="%d/%m/%Y")
id.temp = rep(NA, length(x))
for(i in 1:length(temporada$Años)){
if(temporada$Años[i] == 2014){
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
}else{
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
id.temp[x >= temporada$temp_2_i[i] & x <= temporada$temp_2_f[i]] =   paste(temporada$Años[i],".2", sep = "")
}
}
return(id.temp)
}
DateTemp
library(fenix)
temporada
temporada$temp_1_i
temporada
DateTemp <- function(x, temporada){
require(fenix)
temporada$temp_1_i <- as.Date(temporada$temp_1_i, format ="%d/%m/%Y")
temporada$temp_1_f <- as.Date(temporada$temp_1_f, format ="%d/%m/%Y")
temporada$temp_2_i <- as.Date(temporada$temp_2_i, format ="%d/%m/%Y")
temporada$temp_2_f <- as.Date(temporada$temp_2_f, format ="%d/%m/%Y")
id.temp ep(NA, length(x))
for(i in 1:length(temporada$Años)){
if(temporada$Años[i] == 2014){
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
}else{
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
id.temp[x >= temporada$temp_2_i[i] & x <= temporada$temp_2_f[i]] =   paste(temporada$Años[i],".2", sep = "")
}
}
return(id.temp)
}
DateTemp <- function(x, temporada){
require(fenix)
temporada$temp_1_i <- as.Date(temporada$temp_1_i, format ="%d/%m/%Y")
temporada$temp_1_f <- as.Date(temporada$temp_1_f, format ="%d/%m/%Y")
temporada$temp_2_i <- as.Date(temporada$temp_2_i, format ="%d/%m/%Y")
temporada$temp_2_f <- as.Date(temporada$temp_2_f, format ="%d/%m/%Y")
id.temp ep(NA, length(x))
for(i in 1:length(temporada$Años)){
if(temporada$Años[i] == 2014){
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
}else{
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
id.temp[x >= temporada$temp_2_i[i] & x <= temporada$temp_2_f[i]] =   paste(temporada$Años[i],".2", sep = "")
}
}
return(id.temp)
}
#  tempNorteCentro --------------------------------------------------------
DateTemp <- function(x, temporada){
require(fenix)
temporada$temp_1_i <- as.Date(temporada$temp_1_i, format ="%d/%m/%Y")
temporada$temp_1_f <- as.Date(temporada$temp_1_f, format ="%d/%m/%Y")
temporada$temp_2_i <- as.Date(temporada$temp_2_i, format ="%d/%m/%Y")
temporada$temp_2_f <- as.Date(temporada$temp_2_f, format ="%d/%m/%Y")
id.temp <- NULL
for(i in 1:length(temporada$Años)){
if(temporada$Años[i] == 2014){
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
}else{
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
id.temp[x >= temporada$temp_2_i[i] & x <= temporada$temp_2_f[i]] =   paste(temporada$Años[i],".2", sep = "")
}
}
return(id.temp)
}
length(temporada$Años)
temporada$Años
DateTemp <- function(x, temporada){
require(fenix)
temporada$temp_1_i <- as.Date(temporada$temp_1_i, format ="%d/%m/%Y")
temporada$temp_1_f <- as.Date(temporada$temp_1_f, format ="%d/%m/%Y")
temporada$temp_2_i <- as.Date(temporada$temp_2_i, format ="%d/%m/%Y")
temporada$temp_2_f <- as.Date(temporada$temp_2_f, format ="%d/%m/%Y")
id.temp <- rep(NA, length(x))
for(i in 1:length(temporada$Años)){
if(temporada$Años[i] == 2014){
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
}else{
id.temp[x >= temporada$temp_1_i[i] & x <= temporada$temp_1_f[i]] =   paste(temporada$Años[i],".1", sep = "")
id.temp[x >= temporada$temp_2_i[i] & x <= temporada$temp_2_f[i]] =   paste(temporada$Años[i],".2", sep = "")
}
}
return(id.temp)
}
library(fenix)
temporada
library(fenix)
fenix:::Bhattacharya
library(fenix)
Bhattacharya()
Bhattacharya
library(fenix)
fenix:::estimaSemana2
load("F:/variable_ambientales/lineaParela.RData")
save(lineaParela, file = "F:/github/fenix/data/lineaParela.RData")
library(fenix)
lineaParela$l10
lineaParela$l30
lineaParela$l60
lineaParela$l200
tmpAnchNC
require(fenix)
tmpAnchNC
tmpAnchNC <- read.csv("F:/Datos Bitacoras/tmpAnchNC.csv", sep = ";")
tmpAnchNC
save(tmpAnchNC, file = "F:/github/fenix/data/tmpAnchNC.RData")
tmpAnchNC
tmpAnchNC
tmpAnchNC <- read.csv("F:/Datos Bitacoras/tmpAnchNC.csv", sep = ";")
tmpAnchNC
save(tmpAnchNC, file = "F:/github/fenix/data/tmpAnchNC.RData")
tmpAnchNC$temp_1_i
tmpAnchNC$temp_1_f
as.Date(tmpAnchNC$temp_1_i, format ="%d/%m/%Y")
as.Date(tmpAnchNC$temp_1_f, format ="%d/%m/%Y")
as.Date(tmpAnchNC$temp_2_i, format ="%d/%m/%Y")
as.Date(tmpAnchNC$temp_2_f, format ="%d/%m/%Y")
tmpAnchNC$Anho
tmpAnchNC
DateTemp = function(x){
#require(fenix)
tmpAnchNC$temp_1_i <- as.Date(tmpAnchNC$temp_1_i, format ="%d/%m/%Y")
tmpAnchNC$temp_1_f <- as.Date(tmpAnchNC$temp_1_f, format ="%d/%m/%Y")
tmpAnchNC$temp_2_i <- as.Date(tmpAnchNC$temp_2_i, format ="%d/%m/%Y")
tmpAnchNC$temp_2_f <- as.Date(tmpAnchNC$temp_2_f, format ="%d/%m/%Y")
id.temp = rep(NA, length(x))
for(i in 1:length(tmpAnchNC$Anho)){
if(tmpAnchNC$Anho[i] == 2014){
id.temp[x >= tmpAnchNC$temp_1_i[i] & x <= tmpAnchNC$temp_1_f[i]] =   paste(tmpAnchNC$Años[i],".1", sep = "")
}else{
id.temp[x >= tmpAnchNC$temp_1_i[i] & x <= tmpAnchNC$temp_1_f[i]] =   paste(tmpAnchNC$Años[i],".1", sep = "")
id.temp[x >= tmpAnchNC$temp_2_i[i] & x <= tmpAnchNC$temp_2_f[i]] =   paste(tmpAnchNC$Años[i],".2", sep = "")
}
}
return(id.temp)
}
DateTemp
library(fenix)
tmpAnchNC
lineaParela
lineaParela$l10
lineaParela$l200
ls(package:fenix)
ls(package::fenix)
ls(packages:fenix)
ls(package:fenix)
require(fenix)
ls(package:fenix)
linePeru
ls(package:fenix)
library(fenix)
tmpAnchNC <- read.csv("tmpAnchNC.csv")
tmpAnchNC
save(tmpAnchNC, file = "tmpAnchNC.RData")
library(fenix)
tmpAnchNC
tmpAnchNC
tmpAnchNC <- read.csv("F:/Datos Bitacoras/tmpAnchNC.csv")
save(tmpAnchNC, file = "F:/github/fenix/data/tmpAnchNC.RData")
library(fenix)
tmpAnchNC
tmpAnchNC <- read.csv("F:/Datos Bitacoras/tmpAnchNC.csv", sep = ";")
tmpAnchNC
save(tmpAnchNC, file = "F:/github/fenix/data/tmpAnchNC.RData")
tmpAnchNC
library(fenix)
tmpAnchNC
require(fenix)
tmpAnchNC
tmpAnchNC <- read.csv("F:/Datos Bitacoras/tmpAnchNC.csv", sep = ";")
tmpAnchNC
getwd()
dir()
tmpAnchNC <- read.csv("F:/Datos Bitacoras/tmpAnchNC.csv", sep = ";")
tmpAnchNC
tmpAnchNC <- read.csv("tmpAnchNC.csv")
tmpAnchNC
save(tmpAnchNC, file = "F:/github/fenix/data/tmpAnchNC.RData")
tmpAnchNC
library(fenix)
tmpAnchNC
setwd("F:/github/fenix")
tmpAnchNC <- read.csv("tmpAnchNC.csv")
tmpAnchNC
save(tmpAnchNC, file = "F:/github/fenix/data/tmpAnchNC.RData")
tmpAnchNC
tmpAnchNC
library(fenix)
library(fenix)
tmpAnchNC
require(fenix)
tmpAnchNC
read.csv("tmpAnchNC.csv")
temporada
tmpAnchNC <- read.csv("tmpAnchNC.csv")
save(tmpAnchNC, file = "F:/github/fenix/data/tmpAnchNC.RData")
tmpAnchNC
library(fenix)
temporada
tmpAnchNC
unique(data[, 1])
library(fenix)
require(fenix)
ReadPorcenta
require(fenix)
tmpAnchNC
library(fenix)
